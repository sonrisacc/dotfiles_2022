# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/sonrisachen/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="cobalt2"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
git
sublime
vscode
nvm
pyenv
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="open ~/.oh-my-zsh"

# alias hotkey="st ~/.zshrc"
# alias reload="source ~/.zshrc"
# alias lg="lazygit"

# alias nana="cd ~/Documents/nana"
# alias wk="cd ~/workspace"
# alias dd="cd ~/Documents/DD"
# alias fl="cd /Users/sonrisachen/workspace/falcon"
# alias dpp="cd /Users/sonrisachen/workspace/deadpool"
# alias fm='git commit --no-verify'
# alias dp="make start-dev-db"
# alias pad="pyenv activate jupyter3"
# alias emptycommit="git commit --allow-empty -m 'trigger ci'"
# alias kupdate="aws eks update-kubeconfig --name development-eks-strong-gopher --region=us-west-2"
# alias pf="kubectl port-forward -n rest-services pod/rds-postgresql-proxy 5432:5432"
# alias open-chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

# set default nvm
# nvm alias default 14.18.0

# function rebase(){
# 	git rebase -i HEAD~"$1"
# }

# function getm(){
# 	git pull origin master
# 	git fetch
# }

# function checkout(){
# 	git checkout -b "$1"
# }

# function py3create(){
# 	pyenv virtualenv "$1" "$2"
# }

# function pycadence(){
# 	pyenv virtualenv 3.9.7 "$1"
# }

# function pacandence(){
#     pyenv activate "$1"
# 	echo "$1" > .python-version
# 	pip install -U pip pipenv
# 	pipenv install
# }


# function klogin(){

# 	if [[ "$1"=="qa" ]]; then
# 	  aws eks update-kubeconfig --name Alchemax-qa --region=us-west-2
# 	  echo 'Update aws eks context to qa'
# 	elif [[ "$1"=="dev" ]]; then
# 	  aws eks update-kubeconfig --name development-eks-strong-gopher --region=us-west-2
# 	  echo 'Update aws eks context to dev'
# 	else
# 	  aws eks update-kubeconfig --name Xandar-prod --region=us-west-2
# 	  echo 'Update aws eks context to prod'
# 	fi


# # [default]
# # aws_access_key_id = ASIA3XTSHVTK67D44KG4
# # aws_secret_access_key = S1s5G2qxRrq7f59xJ+qUp/Ep8tuEZddG8W09t92X


# }


# function pa(){
# 	pyenv activate "$1"
# }

# function da(){
# 	pyenv deactivate
# }

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# echo 'eval "$(pyenv init --path)"' >> ~/.zprofile


# # All virtualenvs will be on...
# # mkdir ~/.ve
# # All projects will be on...
# # mkdir ~/workspace
# export WORKON_HOME=~/.ve
# export PROJECT_HOME=~/workspace

# # echo 'eval "$(pyenv init -)"' >> ~/.zshrc
# eval "$(pyenv init -)"
# pyenv virtualenvwrapper_lazy

# # docker development env
# export HOST_GID=$(id -g)
# export HOST_UID=$(id -u)

# # export PATH=${PATH}:/usr/bin/python3
